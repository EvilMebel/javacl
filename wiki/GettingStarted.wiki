#summary How to start with JavaCL

This quick tutorial will get you through setting up a JavaCL project.

= Setup =

The preferred way of creating a JavaCL project is using Maven.
  * [http://maven.apache.org/ Install Maven]
  * Create a `JavaCLTutorial` directory 
  * Create the following `pom.xml` file in that directory :
  {{{
<project xmlns="http://maven.apache.org/POM/4.0.0"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
 <modelVersion>4.0.0</modelVersion>
  <groupId>com.nativelibs4java</groupId>
  <artifactId>javacl-tutorial</artifactId>
  <name>JavaCL Tutorial</name>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  
  <repositories>
    <repository>
      <id>nativelibs4java</id>
      <name>nativelibs4java Maven2 Repository</name>
      <url>http://nativelibs4java.sourceforge.net/maven</url>
    </repository>
  </repositories>
  
  <dependencies>
	<dependency>
	  <groupId>com.nativelibs4java</groupId>
	  <artifactId>javacl</artifactId>
	  <version>1.0.0-RC1</version>
	</dependency>
  </dependencies>

  <build>
  	<plugins>
		<plugin>
			<groupId>com.nativelibs4java</groupId>
			<artifactId>javacl-generator</artifactId>
			<version>1.0.0-RC1</version>
			<executions>
			  <execution>
				<phase>generate-sources</phase>
				<goals>
				  <goal>compile</goal>
				</goals>
			  </execution>
			</executions>
		</plugin>
	</plugins>
  </build>
</project>
}}}
  * Create the following file hierarchy :
  {{{
JavaCLPlugin
|__ src/
     |__ test 
     |__ main/
          |__ java/
          |    |__ tutorial/
          |         |___ JavaCLTutorial.java
          |__ opencl/
               |__ TestAdd.cl
}}}

= A simple addition OpenCL kernel =

This is the OpenCL equivalent of the traditional Hello-world example.

Edit `JavaCLPlugin/src/main/opencl/TestAdd.cl` as follows :
{{{

}}}

= A simple JavaCL host program =
