#summary Various JavaCL learning materials available on the net or in libraries

Official tutorials :
  * Simple [GettingStarted Getting Started] tutorial : will guide you through calling OpenCL kernels with and without the [JavaCLGenerator JavaCL Generator]
  * [http://ochafik.com/blog/?p=501 Write your first OpenCL Discrete Fourier Transform with JavaCL in 15 minutes] : uses the old JNA version of JavaCL (see the [MigratingFromJNAToBridJ migration page])

Books :
  * [http://www.manning.com/scarpino2/ OpenCL in Action] is clearly the best OpenCL reference and hands-on guide out there, packed with amazing real-world examples ! (and it even covers JavaCL)
   [http://2.bp.blogspot.com/-Tk16qtGKxOo/TVxNqRZOw2I/AAAAAAAAAAU/QztUYmvmq-A/s272/OpenCL_new.gif]

Blog entries :
  * Robert Boothby has written two very interesting posts about Mandelbrot sets with JavaCL :
    * [http://bbboblog.blogspot.co.uk/2012/04/towards-richer-gpgpu-mandelbrot-sets.html Towards a richer GPGPU Mandelbrot Sets and OpenCL example.]
    * [http://bbboblog.blogspot.com/2009/10/gpgpu-mandelbrot-with-opencl-and-java.html GPGPU Mandelbrot with OpenCL and Java]
  * [http://suhorukov.blogspot.com/2011/12/opencl-kernel-debugging-for-java-host.html OpenCL kernel debugging for java host code] (also see [DebuggingKernels this wiki page])
  * [http://mahadevangorti.blogspot.com/ GSS Mahadevan] wrote about some JavaCL experiments :
    * [http://mahadevangorti.blogspot.co.uk/2010/04/optimum-globallocal-work-size-for-given.html Optimum global/local work size for a given OpenCL kernel]
    * [http://mahadevangorti.blogspot.co.uk/2010/04/information-about-opencl-global-size.html Information about OpenCL Global size and Local size dimensions]
  * [http://developer.imagej.net/gpu-based-processing-techniques-and-imagej-architecture-draft-02 GPU Based Processing Techniques and the ImageJ Architecture (Draft 0.2)]
  * [http://www.pixelnerve.com/v/2009/10/30/opencl-4-java/ JavaCL from within Processing 1.0]
  * [http://ochafik.free.fr/blog/?p=190 OpenCL4Java: Build high-performance OpenCL code with Java (and stay calm)]
  * [http://ochafik.free.fr/blog/?p=207 ScalaCL: Reap OpenCLâ€™s benefits without learning its syntax (Scala DSL for transparently parallel computations)]